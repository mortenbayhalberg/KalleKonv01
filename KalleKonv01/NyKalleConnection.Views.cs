//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Data.Entity.Infrastructure.MappingViews;

[assembly: DbMappingViewCacheTypeAttribute(
    typeof(KalleKonv01.NyKalleEntities),
    typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySetsec2ac9fe07da4b19c8bf0163ab1ed1c6bc2e7ad2811aa83929d634a89c18d271))]

namespace Edm_EntityMappingGeneratedViews
{
    using System;
    using System.CodeDom.Compiler;
    using System.Data.Entity.Core.Metadata.Edm;

    /// <summary>
    /// Implements a mapping view cache.
    /// </summary>
    [GeneratedCode("Entity Framework Power Tools", "0.9.0.0")]
    internal sealed class ViewsForBaseEntitySetsec2ac9fe07da4b19c8bf0163ab1ed1c6bc2e7ad2811aa83929d634a89c18d271 : DbMappingViewCache
    {
        /// <summary>
        /// Gets a hash value computed over the mapping closure.
        /// </summary>
        public override string MappingHashValue
        {
            get { return "ec2ac9fe07da4b19c8bf0163ab1ed1c6bc2e7ad2811aa83929d634a89c18d271"; }
        }

        /// <summary>
        /// Gets a view corresponding to the specified extent.
        /// </summary>
        /// <param name="extent">The extent.</param>
        /// <returns>The mapping view, or null if the extent is not associated with a mapping view.</returns>
        public override DbMappingView GetView(EntitySetBase extent)
        {
            if (extent == null)
            {
                throw new ArgumentNullException("extent");
            }

            var extentName = extent.EntityContainer.Name + "." + extent.Name;

            if (extentName == "NyKalleModelStoreContainer.tblFrame")
            {
                return GetView0();
            }

            if (extentName == "NyKalleModelStoreContainer.tblSpil")
            {
                return GetView1();
            }

            if (extentName == "NyKalleModelStoreContainer.tblSpiller")
            {
                return GetView2();
            }

            if (extentName == "NyKalleEntities.tblFrame")
            {
                return GetView3();
            }

            if (extentName == "NyKalleEntities.tblSpil")
            {
                return GetView4();
            }

            if (extentName == "NyKalleEntities.tblSpiller")
            {
                return GetView5();
            }

            return null;
        }

        /// <summary>
        /// Gets the view for NyKalleModelStoreContainer.tblFrame.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView0()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing tblFrame
        [NyKalleModel.Store.tblFrame](T1.[tblFrame.CN_FramePK], T1.[tblFrame.CN_FrameSpilPK], T1.[tblFrame.CN_FrameNr], T1.[tblFrame.CN_FrameScore])
    FROM (
        SELECT 
            T.CN_FramePK AS [tblFrame.CN_FramePK], 
            T.CN_FrameSpilPK AS [tblFrame.CN_FrameSpilPK], 
            T.CN_FrameNr AS [tblFrame.CN_FrameNr], 
            T.CN_FrameScore AS [tblFrame.CN_FrameScore], 
            True AS _from0
        FROM NyKalleEntities.tblFrame AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for NyKalleModelStoreContainer.tblSpil.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView1()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing tblSpil
        [NyKalleModel.Store.tblSpil](T1.[tblSpil.CN_SpilPK], T1.[tblSpil.CN_SpilSpillerPK], T1.[tblSpil.CN_SpilDato], T1.[tblSpil.CN_SpilSesson], T1.[tblSpil.CN_SpilKalleKamel], T1.[tblSpil.CN_SpilPlacering], T1.[tblSpil.CN_SpilGennemsnit])
    FROM (
        SELECT 
            T.CN_SpilPK AS [tblSpil.CN_SpilPK], 
            T.CN_SpilSpillerPK AS [tblSpil.CN_SpilSpillerPK], 
            T.CN_SpilDato AS [tblSpil.CN_SpilDato], 
            T.CN_SpilSesson AS [tblSpil.CN_SpilSesson], 
            T.CN_SpilKalleKamel AS [tblSpil.CN_SpilKalleKamel], 
            T.CN_SpilPlacering AS [tblSpil.CN_SpilPlacering], 
            T.CN_SpilGennemsnit AS [tblSpil.CN_SpilGennemsnit], 
            True AS _from0
        FROM NyKalleEntities.tblSpil AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for NyKalleModelStoreContainer.tblSpiller.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView2()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing tblSpiller
        [NyKalleModel.Store.tblSpiller](T1.[tblSpiller.CN_SpillerPK], T1.[tblSpiller.CN_SpillerForNavn], T1.[tblSpiller.CN_SpillerEfterNavn], T1.[tblSpiller.CN_SpillerInit], T1.[tblSpiller.CN_SpillerOptDato], T1.[tblSpiller.CN_SpillerUdMeldDato], T1.[tblSpiller.CN_SpillerFormand], T1.[tblSpiller.CN_SpillerNastFormand], T1.[tblSpiller.CN_SpillerKasser], T1.[tblSpiller.CN_SpillerRevisor], T1.[tblSpiller.CN_SpillerSkemaAnsv], T1.[tblSpiller.CN_SpillerWebAnsv], T1.[tblSpiller.CN_EMail], T1.[tblSpiller.CN_AktivMedl], T1.[tblSpiller.CN_PassivMedl], T1.[tblSpiller.CN_ProveMedl])
    FROM (
        SELECT 
            T.CN_SpillerPK AS [tblSpiller.CN_SpillerPK], 
            T.CN_SpillerForNavn AS [tblSpiller.CN_SpillerForNavn], 
            T.CN_SpillerEfterNavn AS [tblSpiller.CN_SpillerEfterNavn], 
            T.CN_SpillerInit AS [tblSpiller.CN_SpillerInit], 
            T.CN_SpillerOptDato AS [tblSpiller.CN_SpillerOptDato], 
            T.CN_SpillerUdMeldDato AS [tblSpiller.CN_SpillerUdMeldDato], 
            T.CN_SpillerFormand AS [tblSpiller.CN_SpillerFormand], 
            T.CN_SpillerNastFormand AS [tblSpiller.CN_SpillerNastFormand], 
            T.CN_SpillerKasser AS [tblSpiller.CN_SpillerKasser], 
            T.CN_SpillerRevisor AS [tblSpiller.CN_SpillerRevisor], 
            T.CN_SpillerSkemaAnsv AS [tblSpiller.CN_SpillerSkemaAnsv], 
            T.CN_SpillerWebAnsv AS [tblSpiller.CN_SpillerWebAnsv], 
            T.CN_EMail AS [tblSpiller.CN_EMail], 
            T.CN_AktivMedl AS [tblSpiller.CN_AktivMedl], 
            T.CN_PassivMedl AS [tblSpiller.CN_PassivMedl], 
            T.CN_ProveMedl AS [tblSpiller.CN_ProveMedl], 
            True AS _from0
        FROM NyKalleEntities.tblSpiller AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for NyKalleEntities.tblFrame.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView3()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing tblFrame
        [NyKalleModel.tblFrame](T1.[tblFrame.CN_FramePK], T1.[tblFrame.CN_FrameSpilPK], T1.[tblFrame.CN_FrameScore], T1.[tblFrame.CN_FrameNr])
    FROM (
        SELECT 
            T.CN_FramePK AS [tblFrame.CN_FramePK], 
            T.CN_FrameSpilPK AS [tblFrame.CN_FrameSpilPK], 
            T.CN_FrameScore AS [tblFrame.CN_FrameScore], 
            T.CN_FrameNr AS [tblFrame.CN_FrameNr], 
            True AS _from0
        FROM NyKalleModelStoreContainer.tblFrame AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for NyKalleEntities.tblSpil.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView4()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing tblSpil
        [NyKalleModel.tblSpil](T1.[tblSpil.CN_SpilPK], T1.[tblSpil.CN_SpilSpillerPK], T1.[tblSpil.CN_SpilDato], T1.[tblSpil.CN_SpilSesson], T1.[tblSpil.CN_SpilKalleKamel], T1.[tblSpil.CN_SpilPlacering], T1.[tblSpil.CN_SpilGennemsnit])
    FROM (
        SELECT 
            T.CN_SpilPK AS [tblSpil.CN_SpilPK], 
            T.CN_SpilSpillerPK AS [tblSpil.CN_SpilSpillerPK], 
            T.CN_SpilDato AS [tblSpil.CN_SpilDato], 
            T.CN_SpilSesson AS [tblSpil.CN_SpilSesson], 
            T.CN_SpilKalleKamel AS [tblSpil.CN_SpilKalleKamel], 
            T.CN_SpilPlacering AS [tblSpil.CN_SpilPlacering], 
            T.CN_SpilGennemsnit AS [tblSpil.CN_SpilGennemsnit], 
            True AS _from0
        FROM NyKalleModelStoreContainer.tblSpil AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for NyKalleEntities.tblSpiller.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView5()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing tblSpiller
        [NyKalleModel.tblSpiller](T1.[tblSpiller.CN_SpillerPK], T1.[tblSpiller.CN_SpillerForNavn], T1.[tblSpiller.CN_SpillerEfterNavn], T1.[tblSpiller.CN_SpillerInit], T1.[tblSpiller.CN_SpillerOptDato], T1.[tblSpiller.CN_SpillerUdMeldDato], T1.[tblSpiller.CN_SpillerFormand], T1.[tblSpiller.CN_SpillerNastFormand], T1.[tblSpiller.CN_SpillerKasser], T1.[tblSpiller.CN_SpillerRevisor], T1.[tblSpiller.CN_SpillerSkemaAnsv], T1.[tblSpiller.CN_SpillerWebAnsv], T1.[tblSpiller.CN_EMail], T1.[tblSpiller.CN_AktivMedl], T1.[tblSpiller.CN_PassivMedl], T1.[tblSpiller.CN_ProveMedl])
    FROM (
        SELECT 
            T.CN_SpillerPK AS [tblSpiller.CN_SpillerPK], 
            T.CN_SpillerForNavn AS [tblSpiller.CN_SpillerForNavn], 
            T.CN_SpillerEfterNavn AS [tblSpiller.CN_SpillerEfterNavn], 
            T.CN_SpillerInit AS [tblSpiller.CN_SpillerInit], 
            T.CN_SpillerOptDato AS [tblSpiller.CN_SpillerOptDato], 
            T.CN_SpillerUdMeldDato AS [tblSpiller.CN_SpillerUdMeldDato], 
            T.CN_SpillerFormand AS [tblSpiller.CN_SpillerFormand], 
            T.CN_SpillerNastFormand AS [tblSpiller.CN_SpillerNastFormand], 
            T.CN_SpillerKasser AS [tblSpiller.CN_SpillerKasser], 
            T.CN_SpillerRevisor AS [tblSpiller.CN_SpillerRevisor], 
            T.CN_SpillerSkemaAnsv AS [tblSpiller.CN_SpillerSkemaAnsv], 
            T.CN_SpillerWebAnsv AS [tblSpiller.CN_SpillerWebAnsv], 
            T.CN_EMail AS [tblSpiller.CN_EMail], 
            T.CN_AktivMedl AS [tblSpiller.CN_AktivMedl], 
            T.CN_PassivMedl AS [tblSpiller.CN_PassivMedl], 
            T.CN_ProveMedl AS [tblSpiller.CN_ProveMedl], 
            True AS _from0
        FROM NyKalleModelStoreContainer.tblSpiller AS T
    ) AS T1");
        }
    }
}
